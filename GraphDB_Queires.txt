Basic Queries:

Connect to server from browser
	:server connect	

Clear Result Frames
	:clear 

Get Query History
	:history

Check Server Status
	:server status

-- Create Movies DB to explore
	:play movies
	
	Follow the steps in result frame
	Second step select "create db syntax"
	Select & Execute it will create movies db

-- Relational Database to Graph DB

	Node		->	()	noun
	Property	->	{}	Adjective
	Label		->	:
	Relationship	->	[]	verb



-- CREATE clause

Create single node

CREATE (n)


Create multiple nodes

CREATE (n), (m)


Create a node with a label

CREATE (n:Person)


Create a node with multiple labels

CREATE (n:Person:Swedish)


Create node and add labels and properties

CREATE (n:Person {name: 'Andy', title: 'Developer'})


Ex Queries(session):-
CREATE (n:Customer{first_name:"venkat", last_name:"bvs", address:"bangalore", phone: "9035351965", email: "bvsrao91@gmail.com"}) RETURN n
CREATE (n:Customer:Student:Person:Dancer{first_name:"venkat", last_name:"bvs", address:"bangalore", phone: "9035351965", email: "bvsrao91@gmail.com"}) RETURN n
CREATE (n:Customer:Student:Person:Dancer{first_name:"venkat", last_name:"bvs", address:"bangalore", phone: "9035351965", email: "bvsrao91@gmail.com"}) RETURN n

CREATE (n)-[:Loves]->(l) RETURN *


CREATE (n:Banker{name:"venkat"})-[:Loves]->(h:SalesGirl{name:"Hamsika"}) RETURN *

CREATE (n:Banker{name:"venkat"})-[:FOLLOWS]->(v:Singer{name:"Vineela"}) RETURN *

CREATE (n:Banker{name:"venkat"})-[:FOLLOWS{date:'2010-08-10'}]->(v:Singer{name:"Vineela"}) RETURN *


//Wrong query
CREATE (n:Banker{name:"venkat"})<-[:FOLLOWS{date:'2010-08-10'}]->(v:Singer{name:"Vineela"}) RETURN *


CREATE (n:Banker{name:"venkat"})-[:FOLLOWS{date:'2010-08-10'}]->(v:Singer{name:"Vineela"}),
(v)-[:FOLLOWS]->(n) RETURN *



CREATE (j:Student{name:"James"}),
	(v:Student{name:"Venkat"}),
	(r:Student{name:"Rajesh"}),
	(m:Sponcer{name:"Mohan"}),
	(s:Sponcer{name:"Srinu"}),
	(j)-[:Sponcerd_By]->(m),
	(v)-[:Sponcerd_By]->(s),
	(r)-[:Sponcerd_By]->(r)
RETURN *



Return created node

CREATE (a {name: 'Andy'})
RETURN a.name


-- Create relationships

//Single Relationship
CREATE ()-[:follows]->()

//Multiple Relationships
CREATE ()-[:__:__:__:__]->()

Two way
CREATE (a)-[:Loves]->(b), (b)-[:Follows]->(a)

//creating multi node relationships
CREATE (a)-[:Loves]->(b), (b)-[:Follows]->(c)


// Create relationship and returns relationship
CREATE ()-[r:Buys]->(:Laptop)
RETURN type(r)

//Create 4 nodes and add relationships
//a node follows b, b node follows c, d node follows b
// Return all

CREATE (a{name:"A"})-[:Follows]->(b{name:"B"})-[:Follows]->(c{name:"C"}),
(d{name:"D"})-[:Follows]->(b)
RETURN *


-- Basic Match  Queries



-- Basic Update query

MATCH (n:House{name:"Bungalow"}) 
SET n.price = "1,00,00,000"
SET n.type = null
Return *

// Matches and return all the nodes 
MATCH(n) RETURN n

// Match Customer(label) nodes and return
MATCH(n:Customer) RETURN n

// Delete all nodes 
MATCH(n) DETACH DELETE n; 






